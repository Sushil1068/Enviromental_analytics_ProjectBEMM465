import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error

# Load the UK dataset
df = pd.read_csv("UK_Agrofood_Co2_Emission.csv")

# Ensure Year is numeric
df['Year'] = pd.to_numeric(df['Year'], errors='coerce')

# Define key emission source columns
emission_sources = [
    'Crop Residues', 'Rice Cultivation', 'Drained organic soils (CO2)',
    'Fertilizers Manufacturing', 'Manure Management', 'Food Transport',
    'Food Packaging', 'Food Processing'
]

# 1. Line Chart – Total CO₂ Emissions Over Time
plt.figure(figsize=(10, 6))
plt.plot(df['Year'], df['total_emission'], marker='o')
plt.title("Total Agro-Food CO₂ Emissions in the UK (1990–2020)")
plt.xlabel("Year")
plt.ylabel("Total Emissions")
plt.grid(True)
plt.tight_layout()
plt.show()

# 2. Stacked Area Chart – Emissions by Source Over Time
plt.figure(figsize=(12, 6))
df_plot = df[['Year'] + emission_sources].set_index('Year')
df_plot.plot.area(stacked=True, figsize=(12, 6), colormap='tab20')
plt.title("UK Agro-Food Emissions by Source Over Time")
plt.xlabel("Year")
plt.ylabel("Emissions")
plt.tight_layout()
plt.show()

# 3. Bar Chart – Emissions by Source (Latest Year)
latest_year = df['Year'].max()
df_latest = df[df['Year'] == latest_year]
emissions_by_source = df_latest[emission_sources].iloc[0].sort_values(ascending=False)

plt.figure(figsize=(10, 6))
sns.barplot(x=emissions_by_source.values, y=emissions_by_source.index, color='steelblue')
plt.title(f"UK Agro-Food Emissions by Source ({int(latest_year)})")
plt.xlabel("Emissions")
plt.ylabel("Source")
plt.tight_layout()
plt.show()

# 4. Pie Chart – Proportional Breakdown (Latest Year)
plt.figure(figsize=(8, 8))
plt.pie(emissions_by_source, labels=emissions_by_source.index, autopct='%1.1f%%', startangle=140)
plt.title(f"UK Emissions Distribution by Source ({int(latest_year)})")
plt.tight_layout()
plt.show()

# 5. Heatmap – Correlation Between Emissions, Population & Temperature
correlation_columns = ['total_emission', 'Rural population', 'Urban population', 'Average Temperature °C']
df_corr = df[correlation_columns].dropna()
corr_matrix = df_corr.corr()

plt.figure(figsize=(8, 6))
sns.heatmap(corr_matrix, annot=True, cmap='coolwarm', fmt=".2f")
plt.title("Correlation: Emissions, Population, and Temperature")
plt.tight_layout()
plt.show()

# 6. Scatter Plot – Emissions vs Average Temperature
plt.figure(figsize=(8, 6))
sns.scatterplot(x=df['Average Temperature °C'], y=df['total_emission'])
plt.title("Total Emissions vs. Average Temperature")
plt.xlabel("Average Temperature (°C)")
plt.ylabel("Total Emissions")
plt.grid(True)
plt.tight_layout()
plt.show()

# 7. Box Plot – Emissions Distribution by Source
df_melted = df[['Year'] + emission_sources].melt(id_vars='Year', var_name='Source', value_name='Emissions')
plt.figure(figsize=(12, 6))
sns.boxplot(data=df_melted, x='Source', y='Emissions')
plt.xticks(rotation=45)
plt.title("Distribution of UK Agro-Food Emissions by Source (1990–2020)")
plt.tight_layout()
plt.show()
